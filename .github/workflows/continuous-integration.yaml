name: Continuous Integration
# This workflow is triggered on pushes to the repository.
on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [ 'openjdk11', 'openjdk13' ]
    name: Java ${{ matrix.java }} build
    services:
      postgres:
        image: postgres:10.8
        ports:
          # will assign a random free host port
          - 5432/tcp
        env:
          POSTGRES_ROOT_PASSWORD: postgres
          POSTGRES_DB: example
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1
      - uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Setup Java
        uses: joschi/setup-jdk@v1
        with:
          java-version: ${{ matrix.java }}
          architecture: x64
      - name: Build with Maven
        run: ./mvnw compile
      - name: Execute tests
        run: ./mvnw test -Dquarkus.datasource.url=jdbc:tracing:postgresql://localhost:${{ job.services.postgres.ports['5432'] }}/example -Dquarkus.datasource.driver=io.opentracing.contrib.jdbc.TracingDriver
      - name: Generate jar artifact
        run: ./mvnw package -DskipTests
